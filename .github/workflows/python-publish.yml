# This workflow will upload a  Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Processing

on:
  push:
    branches: [ main ] # Run tests and linting on every push to main
  release:
    types: [published] # Publish only when a release is created

jobs:
  # --- TESTING TASK ---
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .[test, performance]

      - name: Run tests and collect coverage 
        run: |
          pytest --cov=src --cov-report=xml
          
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }} 


  # --- LINTING TASK ---
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11' # One version is enough for linting
      - name: Install linters
        run: pip install ruff black
      - name: Check formatting with Black
        run: black --check .
      - name: Lint with Ruff
        run: ruff check .


  # --- DOCUMENTATION DEPLOYMENT TASK ---
  deploy-docs:
    runs-on: ubuntu-latest
    # Launch after successful testing and linting
    needs: [test, lint]
    permissions:
      contents: write # Needed for publication on gh-pages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - name: Install documentation dependencies
        run: |
          pip install -r docs/requirements.txt
          pip install -e .
      - name: Build and deploy documentation
        # This command will automatically build the site and push it to the gh-pages branch
        run: PYTHONPATH=src mkdocs gh-deploy --force --clean


  # --- COLLECTION AND PUBLICATION TASK ---
  build-and-publish:
    runs-on: ubuntu-latest
    # The publication will be triggered ONLY when the release is created
    # AND if the tests and linting are successful
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [test, lint]
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/p/dscience_tools

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
